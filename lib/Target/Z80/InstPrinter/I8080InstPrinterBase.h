//===- Z80InstPrinterBase.h - Convert Z80 MCInst to assembly ----*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints a Z80 MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_Z80_INSTPRINTER_Z80INSTPRINTERBASE_H
#define LLVM_LIB_TARGET_Z80_INSTPRINTER_Z80INSTPRINTERBASE_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
class Z80InstPrinterBase : public MCInstPrinter {
public:
  Z80InstPrinterBase(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                     const MCRegisterInfo &MRI)
    : MCInstPrinter(MAI, MII, MRI) {}

  void printRegName(raw_ostream &OS, unsigned RegNo) const override;
  void printInst(const MCInst *MI, raw_ostream &OS, StringRef Annot,
                 const MCSubtargetInfo &STI) override;

  // Autogenerated by tblgen.
  virtual void printInstruction(const MCInst *MI, raw_ostream &OS) = 0;
  virtual StringRef getRegName(unsigned RegNo) const = 0;

  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
  void printCCOperand(const MCInst *MI, unsigned OpNo, raw_ostream &OS);

  void printMem(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
  void printPtr(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
  void printOff(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
  void printAddr(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
};
}

#endif
